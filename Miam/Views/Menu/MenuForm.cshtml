@model Miam.ViewModels.MenuFormViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="@Url.Content("~/Content/jquery-ui.datepicker.min.css")" rel="stylesheet" />

@Html.Partial("_ValidationPartial")

<h2>@Model.Title</h2>


    <div class="bg-gray container-form">
        @using (Html.BeginForm("AddOrUpdate", "Menu", FormMethod.Post, new { @id = "edit-menu" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" }) 

            <div class="form-group">
                @Html.LabelFor(model => model.Menu.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Menu.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Menu.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Menu.Description, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Menu.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Menu.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Menu.Duration, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Menu.Duration, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"} })
                @Html.ValidationMessageFor(model => model.Menu.Duration, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Menu.BeginDay, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Menu.BeginDay, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Menu.BeginDay, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Menu.BeginDate, htmlAttributes: new { @class = "control-label" })*
                @{ string readonlyClass = string.Empty; }
                @if (Model.Menu.Id > 0)
                {
                    @Html.TextBoxFor(model => model.Menu.BeginDate, "{0:dd/MM/yyyy}", htmlAttributes: new { @type = "text", @id = "begin-date", @class = "form-control datepicker", @readonly = "readonly" })
                }
                else
                {
                    @Html.TextBoxFor(model => model.Menu.BeginDate, "{0:dd/MM/yyyy}", htmlAttributes: new { @type = "text", @id = "begin-date", @class = "form-control datepicker" })
                }

                @Html.ValidationMessageFor(model => model.Menu.BeginDate, "", new { @class = "text-danger" , data_valmsg_for = "begindate" })
            </div>

            <div class="group-form text-right">
                <button type="submit" class="btn btn-success">Enregistrer</button>
            </div>

            @Html.HiddenFor(model => model.Menu.Id)
        }
    </div>

@*<div class="row">
    @foreach (var menuItem in Model.ListMenuItems)
    {
        <div class="col-md-4">

            <h3>@menuItem.Date.ToString("dddd d MMMM")</h3>
            <p>@menuItem.Meal.Name</p>
            <p> @menuItem.MomentOfDay | Pour @menuItem.Meal.NbServings personnes</p>
            <h4>@Html.LabelFor(model => menuItem.Meal.RecipeCollection)</h4>
            <ul>
                @foreach (var recipe in menuItem.Meal.RecipeCollection)
                {
                    <li>@recipe.Name</li>
                }
            </ul>
        </div>
    }
</div>*@

    @section scripts{
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript" src="@Scripts.Url("~/Scripts/Miam.DateFormatValidation.js")" ></script>
    }
